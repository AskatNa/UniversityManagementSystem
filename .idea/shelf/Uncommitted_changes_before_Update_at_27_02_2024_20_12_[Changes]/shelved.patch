Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\nimport  org.example.entities.User;\r\nimport org.example.services.UserService;\r\nimport java.sql.*;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Collections;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        String conString = \"jdbc:postgresql://localhost:5432/simpledb\";\r\n        ResultSet resultSet = null;\r\n        Connection con = null;\r\n        Scanner scanner = new Scanner(System.in);\r\n        Statement stat = null;\r\n        PreparedStatement preparedStatement = null;\r\n        List<User> users = new ArrayList<User>();\r\n\r\n        try {\r\n            Class.forName(\"org.postgresql.Driver\");\r\n            con = DriverManager.getConnection(conString, \"postgres\", \"123456\");\r\n            stat = con.createStatement();\r\n            resultSet = stat.executeQuery(\"SELECT id, name, surname, gender, age, password, course, Attendance , gpa, position, Retake FROM users ORDER BY id\");\r\n\r\n            while (resultSet.next()) {\r\n                int id = resultSet.getInt(\"id\");\r\n                String name = resultSet.getString(\"name\");\r\n                String surname = resultSet.getString(\"surname\");\r\n                Boolean gender = resultSet.getBoolean(\"gender\");\r\n                int age = resultSet.getInt(\"age\");\r\n                boolean position = resultSet.getBoolean(\"position\");\r\n                int Attendance = resultSet.getInt(\"Attendance\");\r\n                double gpa = resultSet.getDouble(\"gpa\");\r\n                boolean Retake = resultSet.getBoolean(\"Retake\");\r\n                String course = resultSet.getString(\"course\");\r\n                String password = resultSet.getString(\"password\");\r\n                User user = User.createUser(name, surname, age, password, id, gender, course, Attendance, gpa, position, Retake);\r\n                users.add(user);\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            System.out.println(e.getMessage());\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        } finally {\r\n            try {\r\n                if (resultSet != null) resultSet.close();\r\n                if (stat != null) stat.close();\r\n                if (con != null) con.close();\r\n            } catch (SQLException e) {\r\n                System.out.println(e.getMessage());\r\n            }\r\n        }\r\n\r\n        for (User user1 : users) {\r\n            System.out.println(user1);\r\n        }\r\n\r\n        // Creating an instance of UserService\r\n        UserService userService = new UserService();\r\n\r\n        // Calling the registration method\r\n        userService.registration();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/src/main/java/org/example/Main.java	(date 1709039718385)
@@ -1,4 +1,5 @@
 package org.example;
+import org.example.entities.Student;
 import  org.example.entities.User;
 import org.example.services.UserService;
 import java.sql.*;
@@ -64,5 +65,6 @@
 
         // Calling the registration method
         userService.registration();
+
     }
 }
\ No newline at end of file
Index: src/main/java/org/example/entities/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.Setter;\r\n\r\nimport java.util.Scanner;\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Setter\r\n@Getter\r\n\r\npublic class Student extends User {\r\n    private double gpa;\r\n    private final double ScholarShip = 41898.00;\r\n    private final double IncreasedScholarShip = 48000.00;\r\n    private int Attendance;\r\n    private final int percentage = 70;\r\n    private boolean Retake;\r\n    //public String message;\r\n    //Attendence = 70%\r\n    Scanner scanner = new Scanner(System.in);\r\n    public Student(String name, String surname, String password, int age, double gpa, int Attendence, int id, boolean gender, boolean Retake){\r\n        super(name,surname,age, password, id, gender);\r\n        this.gpa = gpa;\r\n        this.Attendance = Attendance;\r\n        this.Retake = Retake;\r\n    }\r\n    @Override\r\n    public double Hungergames() {\r\n        if(DeadSouls()){\r\n            //message = \"No Scholarship\";\r\n            return 0.0;\r\n        }\r\n        else{\r\n            if(gpa >= 2.67 && gpa < 3.67 && gpa < 4.0){\r\n                //message = \"Scholarship\";\r\n                return ScholarShip;}\r\n            else if (gpa >= 3.67 && gpa < 4.0) {\r\n                //message = \"IncreasedScholarship\";\r\n                return IncreasedScholarShip;\r\n            }\r\n            else{\r\n                //message = \"No Scholarship\";\r\n                return 0.0;}\r\n        }\r\n    }\r\n//    @Override\r\n//    public String Message() {\r\n//\r\n//        return null;\r\n//    }\r\n    @Override\r\n    public boolean DeadSouls(){\r\n        if(Attendance < percentage){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public double GPADistribution() {return gpa;}\r\n    @Override\r\n    public String toString() {\r\n        return getName() + \" \"\r\n                + getSurname() + \" \"\r\n                + \"Attendence:\" + getAttendance() + \" \"\r\n                + \"Retake:\" +DeadSouls() + \" \"\r\n                + \"ScholarShip:\" + \" \" + Hungergames()\r\n                + \" Gpa: \" + getGpa();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Student.java b/src/main/java/org/example/entities/Student.java
--- a/src/main/java/org/example/entities/Student.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/src/main/java/org/example/entities/Student.java	(date 1709040677669)
@@ -1,28 +1,26 @@
 package org.example.entities;
 
-import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
 import lombok.Setter;
 
-import java.util.Scanner;
 @NoArgsConstructor
-@AllArgsConstructor
+//@AllArgsConstructor
 @Setter
 @Getter
 
 public class Student extends User {
     private double gpa;
     private final double ScholarShip = 41898.00;
-    private final double IncreasedScholarShip = 48000.00;
+    private final double IncreasedScholarShip = 48182.00;
     private int Attendance;
     private final int percentage = 70;
     private boolean Retake;
     //public String message;
     //Attendence = 70%
-    Scanner scanner = new Scanner(System.in);
-    public Student(String name, String surname, String password, int age, double gpa, int Attendence, int id, boolean gender, boolean Retake){
-        super(name,surname,age, password, id, gender);
+    //Scanner scanner = new Scanner(System.in);
+    public Student(String name, String surname, String password,int age, double gpa, int Attendance,int id, boolean gender,boolean Retake){
+        super(name,surname, age, password, id, gender);
         this.gpa = gpa;
         this.Attendance = Attendance;
         this.Retake = Retake;
@@ -46,11 +44,7 @@
                 return 0.0;}
         }
     }
-//    @Override
-//    public String Message() {
-//
-//        return null;
-//    }
+
     @Override
     public boolean DeadSouls(){
         if(Attendance < percentage){
@@ -63,13 +57,46 @@
 
     @Override
     public double GPADistribution() {return gpa;}
+
     @Override
     public String toString() {
-        return getName() + " "
-                + getSurname() + " "
-                + "Attendence:" + getAttendance() + " "
-                + "Retake:" +DeadSouls() + " "
-                + "ScholarShip:" + " " + Hungergames()
-                + " Gpa: " + getGpa();
+        return "Name: " + getName() + " " +"Surname: "+ getSurname() + " " + "Attendence:" + getAttendance() + " " + "Retake:" +DeadSouls() + " " + "ScholarShip:" + " " + Hungergames() + " Gpa: " + getGpa();
     }
+//    public void ViewGPA(){
+//        System.out.println("GPA: " + getGpa());
+//    }
+//   public void viewScholarshipInformation(){
+//       System.out.println("Attendance: " + getAttendance());
+//       System.out.println("Scholarship: " + Hungergames());
+//   }
+//    public void StudentOperations(){
+//        Scanner scanner = new Scanner(System.in);
+//        System.out.println("Student Operations Menu:");
+//        System.out.println("1. View GPA");
+//        System.out.println("2. View Scholarship");
+//        System.out.println("3. Exit");
+//
+//        int choice;
+//        do{
+//            System.out.println("Enter your choice:");
+//            choice = scanner.nextInt();
+//
+//            switch (choice){
+//                case 1:
+//                    ViewGPA();
+//                    break;
+//                case 2:
+//                    viewScholarshipInformation();
+//                    break;
+//                case 3:
+//                    System.out.println("Exit");
+//                    break;
+//                default:
+//                    System.out.println("Invalid choice");
+//            }
+//        }while (choice != 3);
+//
+//        scanner.close();
+//    }
+
 }
Index: src/main/java/org/example/entities/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\r\n\r\nimport lombok.*;\r\nimport org.example.services.Gpa_and_Retake;\r\n@NoArgsConstructor\r\n@Getter\r\n@Setter\r\n@AllArgsConstructor\r\npublic class User implements Comparable<User>, Gpa_and_Retake {\r\n    private int id;\r\n    private int age;\r\n    private String name;\r\n    private String surname;\r\n    public boolean gender;\r\n    private String password;\r\n    public User(String name,String surname, int age, String password,int id, boolean gender){\r\n        this.name = name;\r\n        this.surname = surname;\r\n        this.age = age;\r\n        this.password = password;\r\n        this.id = id;\r\n        this.gender = gender;\r\n    }\r\n\r\n    public static User createUser (String name, String surname, int age,\r\n                                  String password, int id, boolean gender,\r\n                                  String course, int Attendance, double gpa, boolean position, boolean Retake) {\r\n        if (position) {\r\n            return new Teacher(name, surname, age, course, password, gender, id);\r\n        } else {\r\n            return new Student(name, surname, password, age, gpa, Attendance, id, gender, Retake);\r\n        }\r\n    }\r\n\r\n    public String toString(){\r\n        return \"User{\" +\r\n                \"id: \" + id +\r\n                \", name: \" + name +\r\n                \", surname: \" + surname +\r\n                \", age: \" + age +\r\n                \", gender: \" + (gender ? \"male\" : \"female\") +\r\n                \"}\";\r\n    }\r\n    @Override\r\n    public double Hungergames() {return 0.0;}\r\n   public boolean DeadSouls(){return false;}\r\n    @Override\r\n    public int compareTo(User o) {return Double.compare(this.GPADistribution(), o.GPADistribution());}\r\n\r\n    public double GPADistribution(){return 0;}\r\n\r\n//    @Override\r\n//    public String Message() {\r\n//        return null;\r\n//    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/User.java b/src/main/java/org/example/entities/User.java
--- a/src/main/java/org/example/entities/User.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/src/main/java/org/example/entities/User.java	(date 1709039691796)
@@ -13,12 +13,12 @@
     private String surname;
     public boolean gender;
     private String password;
-    public User(String name,String surname, int age, String password,int id, boolean gender){
+    public User(String name, String surname, int age, String password, int id, boolean gender){
         this.name = name;
         this.surname = surname;
-        this.age = age;
+        this.age = this.age;
         this.password = password;
-        this.id = id;
+        this.id = this.id;
         this.gender = gender;
     }
 
@@ -28,7 +28,7 @@
         if (position) {
             return new Teacher(name, surname, age, course, password, gender, id);
         } else {
-            return new Student(name, surname, password, age, gpa, Attendance, id, gender, Retake);
+            return new Student(name, surname, password,age, gpa, Attendance,id, gender,Retake);
         }
     }
 
Index: src/main/java/org/example/entities/Teacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.entities;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Teacher extends User {\r\n    private String course;\r\n    Scanner scanner = new Scanner(System.in);\r\n\r\n    public Teacher(String name, String surname, int age, String course, String password, boolean gender, int id) {\r\n        super(name, surname, age, password, id, gender);\r\n        setCourse(course);\r\n    }\r\n\r\n    public void setCourse(String course) {\r\n        this.course = course;\r\n    }\r\n\r\n    public String getCourse() {\r\n        return course;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return super.toString() + \"\\nCourse: \" + getCourse();\r\n    }\r\n\r\n    public void teacherOperations() {\r\n        System.out.println(\"Teacher Operations Menu:\");\r\n        System.out.println(\"1. View Course Information\");\r\n        System.out.println(\"2. Update Course Information\");\r\n        System.out.println(\"3. Add Assignment\");\r\n        System.out.println(\"4. Grade Assignment\");\r\n        System.out.println(\"5. Exit\");\r\n\r\n        int choice = 0;\r\n        do {\r\n            System.out.print(\"Enter your choice: \");\r\n            choice = scanner.nextInt();\r\n            switch (choice) {\r\n                case 1:\r\n                    viewCourseInformation();\r\n                    break;\r\n                case 2:\r\n                    updateCourseInformation();\r\n                    break;\r\n                case 3:\r\n                    addAssignment();\r\n                    break;\r\n                case 4:\r\n                    gradeAssignment();\r\n                    break;\r\n                case 5:\r\n                    System.out.println(\"Exiting Teacher Operations Menu.\");\r\n                    break;\r\n                default:\r\n                    System.out.println(\"Invalid choice. Please enter a number between 1 and 5.\");\r\n            }\r\n        } while (choice != 5);\r\n    }\r\n\r\n    private void viewCourseInformation() {\r\n        System.out.println(\"Course Information:\");\r\n        System.out.println(\"Name: \" + getCourse());\r\n        // Add more course information as needed\r\n    }\r\n\r\n    private void updateCourseInformation() {\r\n        System.out.print(\"Enter new course name: \");\r\n        String newCourse = scanner.next();\r\n        setCourse(newCourse);\r\n        System.out.println(\"Course information updated successfully.\");\r\n    }\r\n\r\n    private void addAssignment() {\r\n\r\n        System.out.println(\"Enter the assignment title:\");\r\n        String title = scanner.nextLine();\r\n\r\n        System.out.println(\"Enter the assignment description:\");\r\n        String description = scanner.nextLine();\r\n\r\n        System.out.println(\"Enter the due date (YYYY-MM-DD):\");\r\n        String dueDate = scanner.nextLine();\r\n\r\n        // Assuming you have a method to save the assignment, you can call it here\r\n        saveAssignment(title, description, dueDate);\r\n\r\n        System.out.println(\"Assignment added successfully!\");\r\n\r\n        scanner.close();\r\n    }\r\n\r\n    private void saveAssignment(String title, String description, String dueDate) {\r\n        // Logic to save the assignment, for example, store it in a database or a data structure\r\n        System.out.println(\"Assignment Saved: Title - \" + title + \", Description - \" + description + \", Due Date - \" + dueDate);\r\n        // You would typically perform database operations or save to a data structure here\r\n    }\r\n    private void gradeAssignment() {\r\n\r\n        // Assuming a maximum score of 100\r\n        int maxScore = 100;\r\n\r\n        System.out.println(\"Enter the student's score for the assignment:\");\r\n        int studentScore = scanner.nextInt();\r\n\r\n        // Validate input (assuming scores cannot be negative)\r\n        if (studentScore < 0 || studentScore > maxScore) {\r\n            System.out.println(\"Invalid score. Please enter a score between 0 and \" + maxScore);\r\n            return;\r\n        }\r\n\r\n        char grade = calculateGrade(studentScore);\r\n\r\n        System.out.println(\"The student's grade is: \" + grade);\r\n\r\n        scanner.close();\r\n    }\r\n\r\n    private char calculateGrade(int score) {\r\n        // Logic to determine the grade based on the score\r\n        if (score >= 90) {\r\n            return 'A';\r\n        } else if (score >= 80) {\r\n            return 'B';\r\n        } else if (score >= 70) {\r\n            return 'C';\r\n        } else if (score >= 60) {\r\n            return 'D';\r\n        } else {\r\n            return 'F';\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Teacher.java b/src/main/java/org/example/entities/Teacher.java
--- a/src/main/java/org/example/entities/Teacher.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/src/main/java/org/example/entities/Teacher.java	(date 1709036393532)
@@ -1,7 +1,15 @@
 package org.example.entities;
 
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
 import java.util.Scanner;
-
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
 public class Teacher extends User {
     private String course;
     Scanner scanner = new Scanner(System.in);
@@ -11,14 +19,6 @@
         setCourse(course);
     }
 
-    public void setCourse(String course) {
-        this.course = course;
-    }
-
-    public String getCourse() {
-        return course;
-    }
-
     @Override
     public String toString() {
         return super.toString() + "\nCourse: " + getCourse();
Index: src/main/java/org/example/services/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.services;\r\n\r\nimport java.util.Scanner;\r\n\r\nimport java.sql.*;\r\n\r\npublic class UserService {\r\n    public void registration() {\r\n        String stringCon = \"jdbc:postgresql://localhost:5432/simpledb\";\r\n        ResultSet resultSet = null;\r\n        PreparedStatement preparedStatement = null;\r\n        Connection con = null;\r\n        Statement stmt = null;\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        try {\r\n            Class.forName(\"org.postgresql.Driver\");\r\n            con = DriverManager.getConnection(stringCon, \"postgres\", \"123456\");\r\n            stmt = con.createStatement();\r\n\r\n            System.out.println(\"Enter Name:\");\r\n            String name = scanner.nextLine();\r\n\r\n            // Check if the name is already registered\r\n            resultSet = stmt.executeQuery(\"SELECT * FROM users WHERE name = '\" + name + \"'\");\r\n            if (resultSet.next()) {\r\n                System.out.println(\"Name already registered. Please choose a different one.\");\r\n                return;\r\n            }\r\n\r\n            System.out.println(\"Enter Surname:\");\r\n            String surname = scanner.nextLine();\r\n            System.out.println(\"Enter Password:\");\r\n            String password = scanner.nextLine();\r\n\r\n            if (!password.equals(\"123456\")) {\r\n                System.out.println(\"Invalid password. Please try again.\");\r\n                return;\r\n            }\r\n\r\n            preparedStatement = con.prepareStatement(\"INSERT INTO users (name, surname, password) VALUES (?, ?, ?)\");\r\n            preparedStatement.setString(1, name);\r\n            preparedStatement.setString(2, surname);\r\n            preparedStatement.setString(3, password);\r\n\r\n            int rowsAffected = preparedStatement.executeUpdate();\r\n\r\n            if (rowsAffected > 0) {\r\n                System.out.println(\"User registered successfully!\");\r\n            } else {\r\n                System.out.println(\"Failed to register user.\");\r\n            }\r\n        } catch (ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (SQLException e)  {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n        finally {\r\n            try {\r\n                if (resultSet != null) {\r\n                    resultSet.close();\r\n                }\r\n                if (preparedStatement != null) {\r\n                    preparedStatement.close();\r\n                }\r\n                if (stmt != null) {\r\n                    stmt.close();\r\n                }\r\n                if (con != null) {\r\n                    con.close();\r\n                }\r\n                scanner.close();\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n//    public void addUser() {\r\n//\r\n//    }\r\n\r\n    public void teacherOperations() {\r\n\r\n    }\r\n\r\n    public void studentOperations() {\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/UserService.java b/src/main/java/org/example/services/UserService.java
--- a/src/main/java/org/example/services/UserService.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/src/main/java/org/example/services/UserService.java	(date 1709037125715)
@@ -30,6 +30,7 @@
 
             System.out.println("Enter Surname:");
             String surname = scanner.nextLine();
+
             System.out.println("Enter Password:");
             String password = scanner.nextLine();
 
Index: src/main/java/org/example/entities/Subjects.java
===================================================================
diff --git a/src/main/java/org/example/entities/Subjects.java b/src/main/java/org/example/entities/Subjects.java
deleted file mode 100644
--- a/src/main/java/org/example/entities/Subjects.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ /dev/null	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
@@ -1,15 +0,0 @@
-package org.example.entities;
-
-public class Subjects {
-    public enum Subject {
-        Physical_Education_2,Object_Oriented_Programming,Foreign_Language_2,Introduction_to_Programming_2,Political_Science,Calculus_2,Discrete_Mathematics
-        }
-    public int Physical_Education_2;
-    public int Object_Oriented_Programming ;
-    public int Foreign_Language_2;
-    public int Introduction_to_Programming_2;
-    public int Discrete_Mathematics;
-    public int Political_Science;
-
-}
-
Index: src/main/java/Connect.java
===================================================================
diff --git a/src/main/java/Connect.java b/src/main/java/Connect.java
deleted file mode 100644
--- a/src/main/java/Connect.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ /dev/null	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
@@ -1,53 +0,0 @@
-import org.example.entities.User;
-
-import java.sql.*;
-import java.util.ArrayList;
-public class Connect {
-
-    public static void main(String[] args) {
-
-        String conString = "jdbc:postgresql://localhost:5432/simpledb";
-        Connection con = null;
-        ResultSet rs = null;
-        Statement statement = null;
-        ArrayList<User> users = new ArrayList<User>();
-        try {
-            Class.forName("org.postgresql.Driver");
-            con = DriverManager.getConnection(conString, "postgres", "123456");
-            statement = con.createStatement();
-            rs = statement.executeQuery("SELECT * FROM users");
-            while (rs.next()) {
-                int id = rs.getInt("id");
-                String name = rs.getString("name");
-                String surname = rs.getString("surname");
-                Boolean gender = rs.getBoolean("gender");
-                int age = rs.getInt("age");
-
-                User user = new User(id,age, name, surname, gender);
-                users.add(user);
-            }
-        }
-        catch (SQLException | ClassNotFoundException e){
-            System.out.println("Connection error " + e.getMessage());
-        }
-        finally {
-            try{
-                if (rs != null) {
-                    rs.close();
-                }
-                if (statement != null) {
-                    statement.close();
-                }
-                if(con != null) {
-                    con.close();
-                }
-            }
-            catch(SQLException e) {
-                System.out.println("could not close connection: " + e.getMessage());
-            }
-        }
-        for(User user : users) {System.out.println(user);}
-    }
-}
-
-
Index: src/main/java/org/example/entities/Groups.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/entities/Groups.java b/src/main/java/org/example/participants/Groups.java
rename from src/main/java/org/example/entities/Groups.java
rename to src/main/java/org/example/participants/Groups.java
--- a/src/main/java/org/example/entities/Groups.java	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/src/main/java/org/example/participants/Groups.java	(date 1709036393558)
@@ -1,8 +1,6 @@
-package org.example.entities;
+package org.example.participants;
 public class Groups {
-    public enum Group {
-        SE_2301, SE_2302, SE_2303
-    }
+    public enum Group {SE_2301, SE_2302, SE_2303}
     private Group group;
     public Groups(Group group) {
         this.group = group;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2483fa1b-5222-4bb7-b324-09466dfc9f19\" name=\"Changes\" comment=\"why I can't commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_22_20__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_22_20__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_02_2024_20_18__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_02_2024_20_18__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/entities/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/entities/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cOA566kpHHj0a0K4SXkZtKwdw4\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Connect.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.nMain.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Asus/IdeaProjects/chernovik&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Аскат Наринбетов/IdeaProjects/UniversityManagementSystem/src/main/java/org/example/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.1-openjdk-21.0.1-3183f394aec4-7d648f2c\" />\r\n        <option value=\"jdk-21.0.1-openjdk-21.0.1-4caba194b151-23eed401\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2483fa1b-5222-4bb7-b324-09466dfc9f19\" name=\"Changes\" comment=\"\" />\r\n      <created>1707972072352</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1707972072352</updated>\r\n      <workItem from=\"1707972450867\" duration=\"2288000\" />\r\n      <workItem from=\"1708009982571\" duration=\"2188000\" />\r\n      <workItem from=\"1708075912997\" duration=\"3864000\" />\r\n      <workItem from=\"1708265549111\" duration=\"3556000\" />\r\n      <workItem from=\"1708571735569\" duration=\"332000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"create 2 classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708009534961</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708009534961</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"create 2 classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708009602848</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708009602848</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"create 2 classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708010065715</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708010065715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"create 2 classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708010454828</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708010454828</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"create 2 classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708010521220</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708010521220</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"main\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708239905521</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708239905521</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Teacher STOP!\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708242618792</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708242618792</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Proverka GitHub\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708244196682</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708244196682</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Corrected password entry\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708264341298</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708264341298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Update some fragments in the code\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708268984744</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708268984744</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"teacher why?\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708324963804</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708324963804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Easy? Got it? It is garbage collector.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708445719504</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708445719504</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first\" />\r\n    <MESSAGE value=\"create 2 classes\" />\r\n    <MESSAGE value=\"main\" />\r\n    <MESSAGE value=\"Teacher STOP!\" />\r\n    <MESSAGE value=\"Proverka GitHub\" />\r\n    <MESSAGE value=\"Corrected password entry\" />\r\n    <MESSAGE value=\"Update some fragments in the code\" />\r\n    <MESSAGE value=\"teacher why?\" />\r\n    <MESSAGE value=\"Easy? Got it? It is garbage collector.\" />\r\n    <MESSAGE value=\"it is not merging\" />\r\n    <MESSAGE value=\"why I can't commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"why I can't commit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 08c48111f04a1d8a02db5bb1bb9eec7752a5da19)
+++ b/.idea/workspace.xml	(date 1709043146868)
@@ -4,11 +4,24 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2483fa1b-5222-4bb7-b324-09466dfc9f19" name="Changes" comment="why I can't commit">
+    <list default="true" id="2483fa1b-5222-4bb7-b324-09466dfc9f19" name="Changes" comment="Lombok in User">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_02_2024_18_46__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_02_2024_18_46__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_02_2024_18_47__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_02_2024_18_47__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_02_2024_17_41__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_02_2024_17_41__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_02_2024_12_41__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_02_2024_12_41__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_08_41__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_08_41__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_08_42__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_08_42__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_22_20__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_02_2024_22_20__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_02_2024_20_18__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_02_2024_20_18__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Connect.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Groups.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/participants/Groups.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Student.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Subjects.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/Teacher.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/Teacher.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/entities/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/entities/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/services/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/services/UserService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -60,8 +73,7 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="jdk-21.0.1-openjdk-21.0.1-3183f394aec4-7d648f2c" />
-        <option value="jdk-21.0.1-openjdk-21.0.1-4caba194b151-23eed401" />
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
       </set>
     </attachedChunks>
   </component>
@@ -78,6 +90,8 @@
       <workItem from="1708075912997" duration="3864000" />
       <workItem from="1708265549111" duration="3556000" />
       <workItem from="1708571735569" duration="332000" />
+      <workItem from="1709035245138" duration="3994000" />
+      <workItem from="1709040168464" duration="2849000" />
     </task>
     <task id="LOCAL-00001" summary="create 2 classes">
       <option name="closed" value="true" />
@@ -175,7 +189,23 @@
       <option name="project" value="LOCAL" />
       <updated>1708445719504</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="Added Lombok to class Student, Teacher,User. And added DeadSouls to Interface">
+      <option name="closed" value="true" />
+      <created>1709032745438</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1709032745438</updated>
+    </task>
+    <task id="LOCAL-00014" summary="Lombok in User">
+      <option name="closed" value="true" />
+      <created>1709036214594</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1709036214594</updated>
+    </task>
+    <option name="localTasksCounter" value="15" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -204,6 +234,8 @@
     <MESSAGE value="Easy? Got it? It is garbage collector." />
     <MESSAGE value="it is not merging" />
     <MESSAGE value="why I can't commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="why I can't commit" />
+    <MESSAGE value="Added Lombok to class Student, Teacher,User. And added DeadSouls to Interface" />
+    <MESSAGE value="Lombok in User" />
+    <option name="LAST_COMMIT_MESSAGE" value="Lombok in User" />
   </component>
 </project>
\ No newline at end of file
